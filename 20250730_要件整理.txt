■目的
サーバ-クライアント系のスマホアプリとサーバ構成を自前で準備できるようにする

■目標
サーバからレスポンスを返却して、スマホアプリで表示するシステムを開発する

■要求仕様
〇必須
・スマホアプリでデータを入力し、保存できる
・スマホアプリで入力したデータを閲覧/変更できる
・Push通知を飛ばせる
〇推奨
・ログイン（会員登録）が可能
    ・自前のID/PW
    ・Google（OIDC）
    ・SAML2.0
・二段階認証を実装する（OTP等）
・管理者画面（Web）を開発
    ・会員情報を一覧化/検索が可能
・HTTPS通信（証明書関連）
・セッション/Cokkie周り
・DBへ保存するデータの暗号化
・試験の自動化
・デプロイの自動化
・バッチ処理(cron)


■要件定義
〇必須
・ソースコード管理はGit
・スマホアプリ開発
    ・Flutter(dart)での開発
    ・試験はエミュレーター（Android Studio）、実機（iPhone8、できたらandroid実機も）で実施する
・サーバ開発
    ・Docker上のコンテナで実施する
    ・サーバ：コンテナイメージはrockey linux（redhat系）
    ・DB：コンテナイメージはメインDBはPostgreSQL、DNS向けのDBはMySQL
    ・DNS：コンテナイメージはPowerDNS、DBはMySQL
・Push通知：
    ・Firebase Cloud Messaging

〇推奨
・ログイン（会員登録）が可能
    ・自前のID/PW
    ・Google（OIDC）
    ・SAML2.0
・二段階認証を実装する（OTP等）
    ・要調査
・（アプリ）セッション/Cokkie周り
    ・セッションの管理方法を要調査
    ・アプリにCokkieはあるかから要調査
・管理者画面（Web）を開発
    ・SPAで開発
    ・ブラウザはchrome想定
    ・会員情報を一覧化/検索が可能
        ・一覧化：javascriptのライブラリでありそう
        ・検索：APIのパラメータで設定が必要そう
        ・フィルタリング：javascriptで何とかできないか
・（Web）セッション/Cokkie周り
    ・セッションの管理方法を要調査
    ・Cokkieの管理方法を要調査
・HTTPS通信（証明書関連）
    ・自己証明書で対応
    ・ドメインはDNSで登録したもの
    ・クライアント側にも証明書の導入が必要
・DBへ保存するデータの暗号化
    ・AES（鍵長：2048）で対応
・試験の自動化
    ・appiumで検討
・デプロイの自動化：具体から要件等
・バッチ処理(cron)




